Hooks=> Some special type of function provided by react to perform some specific task

1. useState()  

=> control render and re-render

State special kind variable in react that provided by react itself

Syntax

return

Array=> length 2

1. variable name

2. function=> setState function

1. argument => new state value / callback function=> access of prevState
2. new state value;

//stale state problem
    // Non functional update
    // setA(a + 2);
    // setA(a - 1);
    // setA(a + 1);
    // setA(a / 1);
    // setA(a + 1);
    // setA(a * 2);
    // functional update
    setA((prevA) => prevA + 1);
    setA((prevA) => prevA + 1);
    setA(a + 1);
    setA(a + 1);
    setA(a + 1);

    When to use functional => Multiple same state update logic // calculation with prevState

    When to use Non functional => Single state update logic


2. useEffect() => 

useEffect(()=>{

},[])

1. sideeffect function => callback function

2. Dependency array => 

empty =>  call once (after first render cycle);


1. API call => 

CSR(client side rendering) => 


1. Pure javascript => fetch

2. NPM Package => axios

3. Lib => rtk query, react query

.env =>

1. create a .env folder inside the root

2. dotenv

1. ES modules => import.meta.env.VARIABLE_NAME
2. Without es modules=> process.env.VARIABLE_NAME

//https://dummyjson.com/docs/products


useRef();